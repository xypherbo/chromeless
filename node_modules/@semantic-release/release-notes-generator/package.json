{
  "_args": [
    [
      {
        "raw": "@semantic-release/release-notes-generator@^6.0.0",
        "scope": "@semantic-release",
        "escapedName": "@semantic-release%2frelease-notes-generator",
        "name": "@semantic-release/release-notes-generator",
        "rawSpec": "^6.0.0",
        "spec": ">=6.0.0 <7.0.0",
        "type": "range"
      },
      "/Users/nuttapong/Documents/chromeless_bin/node_modules/semantic-release"
    ]
  ],
  "_from": "@semantic-release/release-notes-generator@>=6.0.0 <7.0.0",
  "_id": "@semantic-release/release-notes-generator@6.0.9",
  "_inCache": true,
  "_location": "/@semantic-release/release-notes-generator",
  "_nodeVersion": "8.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/release-notes-generator_6.0.9_1522435879659_0.9701484222791732"
  },
  "_npmUser": {
    "name": "semantic-release-bot",
    "email": "semantic-release@boennemann.me"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "compare-func": "1.3.2",
    "ms": "2.0.0",
    "q": "1.5.1"
  },
  "_requested": {
    "raw": "@semantic-release/release-notes-generator@^6.0.0",
    "scope": "@semantic-release",
    "escapedName": "@semantic-release%2frelease-notes-generator",
    "name": "@semantic-release/release-notes-generator",
    "rawSpec": "^6.0.0",
    "spec": ">=6.0.0 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/semantic-release"
  ],
  "_resolved": "https://registry.npmjs.org/@semantic-release/release-notes-generator/-/release-notes-generator-6.0.9.tgz",
  "_shasum": "2b338deaf1aa970080eb03b6a4c0fd4662540169",
  "_shrinkwrap": null,
  "_spec": "@semantic-release/release-notes-generator@^6.0.0",
  "_where": "/Users/nuttapong/Documents/chromeless_bin/node_modules/semantic-release",
  "author": {
    "name": "Pierre Vanduynslager",
    "url": "https://twitter.com/@pvdlg_"
  },
  "bugs": {
    "url": "https://github.com/semantic-release/release-notes-generator/issues"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "contributors": [
    {
      "name": "Stephan BÃ¶nnemann",
      "email": "stephan@boennemann.me",
      "url": "http://boennemann.me"
    },
    {
      "name": "Gregor Martynus",
      "url": "https://twitter.com/gr2m"
    }
  ],
  "dependencies": {
    "conventional-changelog-angular": "^3.0.6",
    "conventional-changelog-writer": "^3.0.9",
    "conventional-commits-parser": "^2.1.7",
    "debug": "^3.1.0",
    "get-stream": "^3.0.0",
    "git-url-parse": "^8.0.0",
    "import-from": "^2.1.0",
    "into-stream": "^3.1.0",
    "lodash": "^4.17.4"
  },
  "description": "Customizable release-notes-generator plugin for semantic-release",
  "devDependencies": {
    "ava": "^0.25.0",
    "codecov": "^3.0.0",
    "commitizen": "^2.9.6",
    "conventional-changelog-atom": "^0.2.8",
    "conventional-changelog-ember": "^0.3.11",
    "conventional-changelog-eslint": "^1.0.9",
    "conventional-changelog-express": "^0.3.6",
    "conventional-changelog-jshint": "^0.3.8",
    "cz-conventional-changelog": "^2.0.0",
    "escape-string-regexp": "^1.0.5",
    "nyc": "^11.1.0",
    "semantic-release": "^15.0.0",
    "xo": "^0.20.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-qK9d4m4QoK5kqZ/QU0hwDIdaIj0FttsActLAAH87FrqJYJZCikMrgrpzkLM8YFpgi6MZCew9YirGVrwvmxXUVg==",
    "shasum": "2b338deaf1aa970080eb03b6a4c0fd4662540169",
    "tarball": "https://registry.npmjs.org/@semantic-release/release-notes-generator/-/release-notes-generator-6.0.9.tgz",
    "fileCount": 6,
    "unpackedSize": 16217
  },
  "engines": {
    "node": ">=8.3"
  },
  "files": [
    "lib",
    "index.js"
  ],
  "gitHead": "f8e2217e1b7c6e1e5e447cfda1cfaafb875f9c19",
  "homepage": "https://github.com/semantic-release/release-notes-generator#readme",
  "keywords": [
    "changelog",
    "conventional-changelog",
    "conventional-commits",
    "github",
    "publish",
    "release",
    "release-note-generator",
    "semantic-release"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "boennemann",
      "email": "stephan@boennemann.me"
    },
    {
      "name": "christophwitzko",
      "email": "npm@christophwitzko.com"
    },
    {
      "name": "gr2m",
      "email": "gregor@martynus.net"
    },
    {
      "name": "semantic-release-bot",
      "email": "semantic-release@boennemann.me"
    }
  ],
  "name": "@semantic-release/release-notes-generator",
  "nyc": {
    "include": [
      "lib/**/*.js",
      "index.js"
    ],
    "reporter": [
      "json",
      "text",
      "html"
    ],
    "all": true
  },
  "optionalDependencies": {},
  "prettier": {
    "printWidth": 120
  },
  "publishConfig": {
    "access": "public",
    "tag": "next"
  },
  "readme": "# **release-notes-generator**\n\nCustomizable release-notes-generator plugin for [semantic-release](https://github.com/semantic-release/semantic-release) based on [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)\n\n[![Travis](https://img.shields.io/travis/semantic-release/release-notes-generator.svg)](https://travis-ci.org/semantic-release/release-notes-generator)\n[![Codecov](https://img.shields.io/codecov/c/github/semantic-release/release-notes-generator.svg)](https://codecov.io/gh/semantic-release/release-notes-generator)\n[![Greenkeeper badge](https://badges.greenkeeper.io/semantic-release/release-notes-generator.svg)](https://greenkeeper.io/)\n\n[![npm latest version](https://img.shields.io/npm/v/@semantic-release/release-notes-generator/latest.svg)](https://www.npmjs.com/package/@semantic-release/release-notes-generator)\n[![npm next version](https://img.shields.io/npm/v/@semantic-release/release-notes-generator/next.svg)](https://www.npmjs.com/package/@semantic-release/release-notes-generator)\n\n## Options\n\nBy default `release-notes-generator` uses the `angular` format described in [Angular convention](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/convention.md).\n\nAdditional options can be set within the plugin definition in `package.json` to use a different commit format and to customize it:\n\n```json\n{\n  \"release\": {\n    \"generateNotes\": {\n      \"preset\": \"angular\",\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\", \"BREAKING\"]\n      },\n      \"writerOpts\": {\n        \"commitsSort\": [\"subject\", \"scope\"],\n      }\n    }\n  }\n}\n```\n\n| Option       | Description                                                                                                                                                                                                                                                                                        | Default   |\n| ------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\n| `preset`     | [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset (Possible values: `angular`, `atom`, `codemirror`, `ember`, `eslint`, `express`, `jquery`, `jscs`, `jshint`).                                                                                    | `angular` |\n| `config`     | NPM package name of a custom [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset.                                                                                                                                                                    | -         |\n| `parserOpts` | Additional [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options that will extends ones loaded by `preset` or `config`. See [Parser options](#parser-options). | -         |\n| `writerOpts` | Additional [conventional-commits-writer](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-writer#options) options that will extends ones loaded by `preset` or `config`. See [Writer options](#writer-options).                        | -         |\n\n**NOTE:** `options.config` will be overwritten by the values of preset. You should use either `preset` or `config`, but not both. Individual properties of `parserOpts` and `writerOpts` will overwrite ones loaded with `preset` or `config`.\n\n### Parser Options\n\nAllow to overwrite specific [conventional-commits-parser](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#conventionalcommitsparseroptions) options. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module.\n\nThe following example uses [Angular convention](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/convention.md) but will consider a commit to be a breaking change if it's body contains `BREAKING CHANGE`, `BREAKING CHANGES` or `BREAKING`. By default the [preset](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/index.js#L14) checks only for `BREAKING CHANGE` and `BREAKING CHANGES`.\n\n```json\n{\n  \"release\": {\n    \"generateNotes\": {\n      \"preset\": \"angular\",\n      \"parserOpts\": {\n        \"noteKeywords\": [\"BREAKING CHANGE\", \"BREAKING CHANGES\", \"BREAKING\"],\n      }\n    }\n  }\n}\n```\n\n### Writer Options\n\nAllow to overwrite specific [conventional-commits-writer](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-writer#options) options. This is convenient to use a [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) preset with some customizations without having to create a new module.\n\nThe following example uses [Angular convention](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/convention.md) but will sort the commits in the changelog by `subject` then `scope`. By default the [preset](https://github.com/conventional-changelog/conventional-changelog/blob/master/packages/conventional-changelog-angular/index.js#L90) sort the commits in the changelog by `scope` then `subject`.\n\n```json\n{\n  \"release\": {\n    \"generateNotes\": {\n      \"preset\": \"angular\",\n      \"writerOpts\": {\n        \"commitsSort\": [\"subject\", \"scope\"],\n      }\n    }\n  }\n}\n```\n\n## Usage\n\nThe plugin is used by default by [semantic-release](https://github.com/semantic-release/semantic-release) so installing it is not necessary and all configuration are optionals.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/semantic-release/release-notes-generator.git"
  },
  "scripts": {
    "cm": "git-cz",
    "codecov": "codecov -f coverage/coverage-final.json",
    "lint": "xo",
    "pretest": "npm run lint",
    "semantic-release": "semantic-release",
    "test": "nyc ava -v"
  },
  "version": "6.0.9",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": ">=8.3"
      },
      "pkgid": "@semantic-release/release-notes-generator@6.0.9"
    }
  ],
  "xo": {
    "prettier": true,
    "space": true
  }
}
